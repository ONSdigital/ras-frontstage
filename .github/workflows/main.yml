name: Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}
  IMAGE: action
  REGISTRY_HOSTNAME: eu.gcr.io
  HOST: ${{ secrets.GOOGLE_PROJECT_ID }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build & package"
  build:
    name: Build Test & Package
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Build
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
      - name: Test
        run: |
          make lint
          make unit-tests
          make integration-tests
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_key: ${{ secrets.GCR_KEY }}
        # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          gcloud auth configure-docker
        # Build the Docker image
      - name: Build Docker Image
        run: |
          docker build -t "$REGISTRY_HOSTNAME"/"$HOST"/"$IMAGE":latest -f ./_infra/docker/Dockerfile .
      - name: Publish Docker Image
        if: github.ref == 'refs/heads/master'
        run: |
          docker push "$REGISTRY_HOSTNAME"/"$HOST"/"$IMAGE":latest
      - name: package helm
        run: |
          helm dep up _infra/helm/frontstage
          helm package _infra/helm/frontstage
      - name: Publish Charts
        if: github.ref == 'refs/heads/master'
        run: |
          gsutil cp frontstage-*.tgz gs://ras-rm-artifacts/frontstage/
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()
      
      