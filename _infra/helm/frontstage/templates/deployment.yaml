apiVersion: apps/v1
kind: Deployment
metadata:
  {{- if .Values.canary.enabled}}
  name: "{{ .Chart.Name }}-{{ .Values.canary.name }}"
  labels:
    type: {{ .Values.canary.name }}
  {{- else }}
  name: {{ .Chart.Name }}
  {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      env: {{ .Values.env }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        env: {{ .Values.env }}
    spec:
      volumes:
      - name: google-cloud-key
        secret:
          secretName: google-application-credentials
      containers:
        - name: {{ .Chart.Name }}
          {{- if eq .Values.image.tag "latest"}}
          image: "{{ .Values.image.name}}/{{ .Chart.Name }}:{{ .Chart.AppVersion }}"
          {{- else}}
          image: "{{ .Values.image.devRepo }}/{{ .Chart.Name }}:{{ .Values.image.tag }}"
          {{- end}}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: google-cloud-key
            mountPath: /var/secrets/google
          ports:
            - name: http-server
              containerPort: {{ .Values.container.port }}
          readinessProbe:
            httpGet:
              path: /info
              port: {{ .Values.container.port }}
            initialDelaySeconds: 1
            periodSeconds: 20
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /info
              port: {{ .Values.container.port }}
            initialDelaySeconds: 1
            periodSeconds: 20
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
          env:
          - name: ACCOUNT_SERVICE_URL
            value: "https://{{ .Values.ingress.surveysHost }}/surveys/todo"
          - name: ACCOUNT_SERVICE_LOG_OUT_URL
            value: "https://{{ .Values.ingress.surveysHost }}/sign-in/logout"
          - name: BANNER_SERVICE_URL
            {{- if .Values.dns.enabled }}
            value: "http://banner-api.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(BANNER_API_SERVICE_HOST):$(BANNER_API_SERVICE_PORT)"
            {{- end }}
          - name: SECURITY_USER_NAME
            valueFrom:
              secretKeyRef:
                name: security-credentials
                key: security-user
          - name: SECURITY_USER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: security-credentials
                key: security-password
          - name: JWT_SECRET
            valueFrom:
              secretKeyRef:
                name: jwt-secret
                key: jwt-secret
          - name: SCHEME
            value: {{ .Values.scheme }}
          - name: CASE_URL
            {{- if .Values.dns.enabled }}
            value: "http://case.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(CASE_SERVICE_HOST):$(CASE_SERVICE_PORT)"
            {{- end }}
          - name: COLLECTION_EXERCISE_URL
            {{- if .Values.dns.enabled }}
            value: "http://collection-exercise.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(COLLECTION_EXERCISE_SERVICE_HOST):$(COLLECTION_EXERCISE_SERVICE_PORT)"
            {{- end }}
          - name: COLLECTION_INSTRUMENT_URL
            {{- if .Values.dns.enabled }}
            value: "http://collection-instrument.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(COLLECTION_INSTRUMENT_SERVICE_HOST):$(COLLECTION_INSTRUMENT_SERVICE_PORT)"
            {{- end }}
          - name: EMAIL_TOKEN_EXPIRY
            value: "{{ .Values.email.expiry }}"
          - name: EMAIL_TOKEN_SALT
            valueFrom:
              secretKeyRef:
                name: {{ .Chart.Name }}
                key: email-salt
          - name: EQ_URL
            value: "{{ .Values.eq.url }}"
          {{ if .Values.analytics.enabled }}
          - name: GOOGLE_ANALYTICS_ID
            value: "{{ .Values.analytics.id }}"
          - name: GOOGLE_TAG_MANAGER
            value: "{{ .Values.analytics.tagManager }}"
          - name: GOOGLE_TAG_MANAGER_PROP
            value: "{{ .Values.analytics.tagManagerProp }}"
          {{- end }}
          - name: ACCESS_CONTROL_ALLOW_ORIGIN
            {{- if .Values.ingress.enabled }}
            value: "https://{{ .Values.ingress.surveysHost }}"
            {{- else }}
            value: "*"
            {{- end }}
          - name: IAC_URL
            {{- if .Values.dns.enabled }}
            value: "http://iac.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(IAC_SERVICE_HOST):$(IAC_SERVICE_PORT)"
            {{- end }}
          - name: JSON_SECRET_KEYS
            valueFrom:
              secretKeyRef:
                name: json-secrets
                key: json-secret-keys-frontstage
          - name: AUTH_URL
            {{- if .Values.dns.enabled }}
            value: "http://auth.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(AUTH_SERVICE_HOST):$(AUTH_SERVICE_PORT)"
            {{- end }}
          - name: PARTY_URL
            {{- if .Values.dns.enabled }}
            value: "http://party.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(PARTY_SERVICE_HOST):$(PARTY_SERVICE_PORT)"
            {{- end }}
          - name: PORT
            value: "{{ .Values.container.port }}"
          - name: GOOGLE_CLOUD_PROJECT
            value: "{{ .Values.gcp.project }}"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/secrets/google/credentials.json
          - name: PUBSUB_TOPIC
            value: "{{ .Values.gcp.topic }}"
          {{- if .Values.email.enabled }}
          - name: RAS_NOTIFY_REQUEST_PASSWORD_CHANGE_TEMPLATE
            value: "{{ .Values.email.templates.passwordChange }}"
          {{- end }}
          - name: REDIS_HOST
            {{- if .Values.database.managedRedis }}
            valueFrom:
              configMapKeyRef:
                name: redis-config
                key: redis-host
            {{- else }}
            value: "$(REDIS_MASTER_SERVICE_HOST)"
            {{- end }}
          - name: REDIS_PORT
            {{- if .Values.database.managedRedis }}
            valueFrom:
              configMapKeyRef:
                name: redis-config
                key: redis-port
            {{- else }}
            value: "$(REDIS_MASTER_SERVICE_PORT)"
            {{- end}}
          - name: REDIS_DB
            value: "3"
          - name: SECURE_MESSAGE_URL
            {{- if .Values.dns.enabled }}
            value: "http://secure-message.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(SECURE_MESSAGE_SERVICE_HOST):$(SECURE_MESSAGE_SERVICE_PORT)"
            {{- end }}
          - name: SEND_EMAIL_TO_GOV_NOTIFY
            value: "{{ .Values.email.enabled }}"
          - name: SHARE_SURVEY_ENABLED
            value: "{{ .Values.features.shareSurveys }}"
          - name: SURVEY_URL
            {{- if .Values.dns.enabled }}
            value: "http://survey.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(SURVEY_SERVICE_HOST):$(SURVEY_SERVICE_PORT)"
            {{- end }}
          - name: SECURE_APP
            value: "{{- if .Values.security.enabled -}}True{{- else -}}False{{- end -}}"
          - name: WTF_CSRF_ENABLED
            value: "{{- if .Values.security.csrf.protected -}}True{{- else -}}False{{- end -}}"
          - name: WTF_CSRF_TIME_LIMIT
            value: "{{ .Values.security.csrf.timeLimit }}"
          - name: CANARY_GENERATE_ERRORS
            value: "{{- if .Values.canary.generate_errors -}}True{{- else -}}False{{- end -}}"
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Chart.Name }}
                key: email-secret-key
          resources:
            {{ toYaml .Values.resources | nindent 12 }}
